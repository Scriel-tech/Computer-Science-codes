/*Design a cash register drawer function checkCashRegister() that accepts purchase price as the first argument (price), payment as the second argument (cash), and cash-in-drawer (cid) as the third argument.

cid is a 2D array listing available currency.

The checkCashRegister() function should always return an object with a status key and a change key.

Return {status: "INSUFFICIENT_FUNDS", change: []} if cash-in-drawer is less than the change due, or if you cannot return the exact change.

Return {status: "CLOSED", change: [...]} with cash-in-drawer as the value for the key change if it is equal to the change due.

Otherwise, return {status: "OPEN", change: [...]}, with the change due in coins and bills, sorted in highest to lowest order, as the value of the change key.
*/

function addToChange(currency, change, amount){
  //console.log("start")
   if(change.length == 0){
     change.push([currency, 0]);
   }
   let add = false;
   for(let i=0;i<change.length;i++){
     if(change[i][0] == currency){
       add = true;
       change[i][1] += amount;
      }
   }
   
   if(add == false){
     change.push([currency, amount]);
   }
   //console.log(change)

  return change;
}

function checkCashRegister(price, cash, cid) {
  
  let change = [];
  let remain = cash - price;
  //console.log(remain)

  let pos = cid.length;
  while(remain !=0 ){
  
    let currency = "";
    let amount = 0;
    if(remain>=100 && cid[pos-1][1] >=100){
      console.log(100)
      remain -= 100;
      cid[pos-1][1] -= 100;
      currency = "ONE HUNDRED";
      amount = 10000;
    }else if(remain>=20 && cid[pos-2][1] >=20){
      console.log(20)
      remain -= 20;
      cid[pos-2][1] -= 20;
      currency = "TWENTY";
      amount = 2000;
    }else if(remain>=10 && cid[pos-3][1] >=10){
      console.log(10)
      remain -= 10;
      cid[pos-3][1] -= 10;
      currency = "TEN";
      amount = 1000;
    }else if(remain>=5 && cid[pos-4][1] >=5){
      console.log(5)
      remain -= 5;
      cid[pos-4][1] -= 5;
      currency = "FIVE";
      amount = 500;
    }else if(remain>=1 && cid[pos-5][1] >=1){
      console.log(1)
      remain -= 1;
      cid[pos-5][1] -= 1;
      currency = "ONE";
      amount = 100;
    }else if(remain>=0.25 && cid[pos-6][1] >=0.25){
      console.log(0.25)
      remain -= 0.25;
      cid[pos-6][1] -= 0.25;
      currency = "QUARTER";
      amount = 25;
    }else if(remain>=0.1 && cid[pos-7][1] >=0.1){
      console.log(0.1)
      remain -= 0.1;
      cid[pos-7][1] -= 0.1;
      currency = "DIME";
      amount = 10;
    }else if(remain>=0.05 && cid[pos-8][1] >=0.05){
      console.log(0.05)
      remain -= 0.05;
      cid[pos-8][1] -= 0.05;
      currency = "NICKEL";
      amount = 5;
    }else if(remain>=0.00 && cid[pos-9][1] >0.00){
      console.log(0.01)
      remain -= 0.01;
      cid[pos-9][1] -= 0.01;
      currency = "PENNY";
      amount = 1;
    }else if(remain>0){
      console.log(cid, remain)
      return {status: "INSUFFICIENT_FUNDS", change: []}
    }else if(remain<=0){
      break;
    }
    change = addToChange(currency, change, amount);
  }
  console.log(change)
  for(let i in change){
    change[i][1] = change[i][1]/100
  }
  
  for(let i in cid){
    if(cid[i][1] >0){
      return {status: "OPEN", change: change};
    }
  }
  for(let i=1;i<cid.length;i++){
    change.push(cid[i]);
  }
  return {status: "CLOSED", change: change};
}

//console.log(checkCashRegister(19.5, 20, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]));

//console.log(checkCashRegister(3.26, 100, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]));

console.log(checkCashRegister(19.5, 20, [["PENNY", 0.5], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]))
